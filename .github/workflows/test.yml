on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: Test
jobs:
  osstest:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: oss
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Start MinIO
        run: docker run -p 9000:9000 -p 9001:9001 -e "MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE" -e "MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" -d quay.io/minio/minio server /data --console-address ":9001"
      - name: Test
        run: go test -v -tags="alltest osstest"

  ipfstest:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: ipfs
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Setup Ipfs daemon 
        run: |
          sudo mkdir -p /root/ipfs_staging
          sudo mkdir -p /root/ipfs_data
          export ipfs_staging=/root/ipfs_staging
          export ipfs_data=/root/ipfs_data 
          docker run -d --name ipfs_host -v $ipfs_staging:/export -v $ipfs_data:/data/ipfs -p 4001:4001 -p 8080:8080 -p 5001:5001 ipfs/go-ipfs:latest
      - name: Test
        run: go test -v -tags alltest


  ipfssynckvtest:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: ipfs-synckv
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Setup Ipfs daemon 
        run: |
          sudo mkdir -p /root/ipfs_staging
          sudo mkdir -p /root/ipfs_data
          export ipfs_staging=/root/ipfs_staging
          export ipfs_data=/root/ipfs_data 
          docker run -d --name ipfs_host -v $ipfs_staging:/export -v $ipfs_data:/data/ipfs -p 4001:4001 -p 8080:8080 -p 5001:5001 ipfs/go-ipfs:latest
      - name: Test
        run: go test -v -tags alltest


  goleveldbtest:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: goleveldb
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest

  crdtdbtest:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: crdt
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest

  ipfslogdbtest:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: ipfs-log
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest

  badgerdbtest:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: badger
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest

  hybriddbtest:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: hybriddb
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest

  hybriddb-unit-test:
    strategy:
      matrix:
        go-version: [1.25.2]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Run hybriddb unit tests
        run: go test -v ./driver/hybriddb/...
