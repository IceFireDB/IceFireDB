on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: Test
jobs:
  osstest:
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: oss
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags="alltest osstest"

  ipfstest:
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: ipfs
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest

  goleveldbtest:
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: goleveldb
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest

  crdtdbtest:
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: crdt
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest

  ipfslogdbtest:
    strategy:
      matrix:
        go-version: [1.22.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64, armv5, armv6, armv7]
    runs-on: ${{ matrix.os }}
    env:
      DRIVER: ipfs-log
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: go mod tidy && go mod vendor
      - name: Test
        run: go test -v -tags alltest
