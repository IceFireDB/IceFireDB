syntax = "proto2";

package pubsub.pb;

message RPC {
	repeated SubOpts subscriptions = 1;
	repeated Message publish = 2;

	message SubOpts {
		optional bool subscribe = 1; // subscribe or unsubcribe
		optional string topicid = 2;
	}

	optional ControlMessage control = 3;

	// Canonical Extensions should register their messages here.

	// Experimental Extensions should register their messages here. They
	// must use field numbers larger than 0x200000 to be encoded with at least 4
	// bytes
	optional TestExtension testExtension = 6492434;
}

message Message {
	optional bytes from = 1;
	optional bytes data = 2;
	optional bytes seqno = 3;
	optional string topic = 4;
	optional bytes signature = 5;
	optional bytes key = 6;
}

message ControlMessage {
	repeated ControlIHave ihave = 1;
	repeated ControlIWant iwant = 2;
	repeated ControlGraft graft = 3;
	repeated ControlPrune prune = 4;
	repeated ControlIDontWant idontwant = 5;
	optional ControlExtensions extensions = 6;
}

message ControlIHave {
	optional string topicID = 1;
	// implementors from other languages should use bytes here - go protobuf emits invalid utf8 strings
	repeated string messageIDs = 2;
}

message ControlIWant {
	// implementors from other languages should use bytes here - go protobuf emits invalid utf8 strings
	repeated string messageIDs = 1;
}

message ControlGraft {
	optional string topicID = 1;
}

message ControlPrune {
	optional string topicID = 1;
	repeated PeerInfo peers = 2;
	optional uint64 backoff = 3;
}

message ControlIDontWant {
	// implementors from other languages should use bytes here - go protobuf emits invalid utf8 strings
	repeated string messageIDs = 1;
}

message ControlExtensions {
	// Initially empty. Future extensions will be added here along with a
	// reference to their specification.

	// Experimental extensions must use field numbers larger than 0x200000 to be
	// encoded with 4 bytes
	optional bool testExtension = 6492434;
}


message PeerInfo {
	optional bytes peerID = 1;
	optional bytes signedPeerRecord = 2;
}

message TestExtension {}