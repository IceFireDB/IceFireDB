// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: github.com/ipfs/boxo/ipld/unixfs/pb/unixfs.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Data_DataType int32

const (
	Data_Raw       Data_DataType = 0
	Data_Directory Data_DataType = 1
	Data_File      Data_DataType = 2
	Data_Metadata  Data_DataType = 3
	Data_Symlink   Data_DataType = 4
	Data_HAMTShard Data_DataType = 5
)

// Enum value maps for Data_DataType.
var (
	Data_DataType_name = map[int32]string{
		0: "Raw",
		1: "Directory",
		2: "File",
		3: "Metadata",
		4: "Symlink",
		5: "HAMTShard",
	}
	Data_DataType_value = map[string]int32{
		"Raw":       0,
		"Directory": 1,
		"File":      2,
		"Metadata":  3,
		"Symlink":   4,
		"HAMTShard": 5,
	}
)

func (x Data_DataType) Enum() *Data_DataType {
	p := new(Data_DataType)
	*p = x
	return p
}

func (x Data_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_enumTypes[0].Descriptor()
}

func (Data_DataType) Type() protoreflect.EnumType {
	return &file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_enumTypes[0]
}

func (x Data_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Data_DataType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Data_DataType(num)
	return nil
}

// Deprecated: Use Data_DataType.Descriptor instead.
func (Data_DataType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescGZIP(), []int{0, 0}
}

type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *Data_DataType         `protobuf:"varint,1,req,name=Type,enum=ipfs.boxo.ipld.unixfs.pb.Data_DataType" json:"Type,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	Filesize      *uint64                `protobuf:"varint,3,opt,name=filesize" json:"filesize,omitempty"`
	Blocksizes    []uint64               `protobuf:"varint,4,rep,name=blocksizes" json:"blocksizes,omitempty"`
	HashType      *uint64                `protobuf:"varint,5,opt,name=hashType" json:"hashType,omitempty"`
	Fanout        *uint64                `protobuf:"varint,6,opt,name=fanout" json:"fanout,omitempty"`
	Mode          *uint32                `protobuf:"varint,7,opt,name=mode" json:"mode,omitempty"`
	Mtime         *IPFSTimestamp         `protobuf:"bytes,8,opt,name=mtime" json:"mtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetType() Data_DataType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Data_Raw
}

func (x *Data) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Data) GetFilesize() uint64 {
	if x != nil && x.Filesize != nil {
		return *x.Filesize
	}
	return 0
}

func (x *Data) GetBlocksizes() []uint64 {
	if x != nil {
		return x.Blocksizes
	}
	return nil
}

func (x *Data) GetHashType() uint64 {
	if x != nil && x.HashType != nil {
		return *x.HashType
	}
	return 0
}

func (x *Data) GetFanout() uint64 {
	if x != nil && x.Fanout != nil {
		return *x.Fanout
	}
	return 0
}

func (x *Data) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *Data) GetMtime() *IPFSTimestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MimeType      *string                `protobuf:"bytes,1,opt,name=MimeType" json:"MimeType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetMimeType() string {
	if x != nil && x.MimeType != nil {
		return *x.MimeType
	}
	return ""
}

// mostly copied from proto 3 - with int32 nanos changed to fixed32 for js-ipfs compatibility
// https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto
type IPFSTimestamp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds *int64 `protobuf:"varint,1,req,name=seconds" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos         *uint32 `protobuf:"fixed32,2,opt,name=nanos" json:"nanos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPFSTimestamp) Reset() {
	*x = IPFSTimestamp{}
	mi := &file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPFSTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPFSTimestamp) ProtoMessage() {}

func (x *IPFSTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPFSTimestamp.ProtoReflect.Descriptor instead.
func (*IPFSTimestamp) Descriptor() ([]byte, []int) {
	return file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescGZIP(), []int{2}
}

func (x *IPFSTimestamp) GetSeconds() int64 {
	if x != nil && x.Seconds != nil {
		return *x.Seconds
	}
	return 0
}

func (x *IPFSTimestamp) GetNanos() uint32 {
	if x != nil && x.Nanos != nil {
		return *x.Nanos
	}
	return 0
}

var File_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto protoreflect.FileDescriptor

var file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDesc = []byte{
	0x0a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x70, 0x66,
	0x73, 0x2f, 0x62, 0x6f, 0x78, 0x6f, 0x2f, 0x69, 0x70, 0x6c, 0x64, 0x2f, 0x75, 0x6e, 0x69, 0x78,
	0x66, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x75, 0x6e, 0x69, 0x78, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x18, 0x69, 0x70, 0x66, 0x73, 0x2e, 0x62, 0x6f, 0x78, 0x6f, 0x2e, 0x69, 0x70,
	0x6c, 0x64, 0x2e, 0x75, 0x6e, 0x69, 0x78, 0x66, 0x73, 0x2e, 0x70, 0x62, 0x22, 0xf2, 0x02, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x70, 0x66, 0x73, 0x2e, 0x62, 0x6f, 0x78, 0x6f, 0x2e,
	0x69, 0x70, 0x6c, 0x64, 0x2e, 0x75, 0x6e, 0x69, 0x78, 0x66, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x69, 0x7a,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x61, 0x6e, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x66, 0x61, 0x6e, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x70, 0x66, 0x73,
	0x2e, 0x62, 0x6f, 0x78, 0x6f, 0x2e, 0x69, 0x70, 0x6c, 0x64, 0x2e, 0x75, 0x6e, 0x69, 0x78, 0x66,
	0x73, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x50, 0x46, 0x53, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x61, 0x77, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x4d, 0x54, 0x53, 0x68, 0x61, 0x72, 0x64, 0x10,
	0x05, 0x22, 0x26, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x0d, 0x49, 0x50, 0x46,
	0x53, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x70, 0x66, 0x73, 0x2f, 0x62, 0x6f,
	0x78, 0x6f, 0x2f, 0x69, 0x70, 0x6c, 0x64, 0x2f, 0x75, 0x6e, 0x69, 0x78, 0x66, 0x73, 0x2f, 0x70,
	0x62,
}

var (
	file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescOnce sync.Once
	file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescData = file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDesc
)

func file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescGZIP() []byte {
	file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescOnce.Do(func() {
		file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescData)
	})
	return file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDescData
}

var file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_goTypes = []any{
	(Data_DataType)(0),    // 0: ipfs.boxo.ipld.unixfs.pb.Data.DataType
	(*Data)(nil),          // 1: ipfs.boxo.ipld.unixfs.pb.Data
	(*Metadata)(nil),      // 2: ipfs.boxo.ipld.unixfs.pb.Metadata
	(*IPFSTimestamp)(nil), // 3: ipfs.boxo.ipld.unixfs.pb.IPFSTimestamp
}
var file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_depIdxs = []int32{
	0, // 0: ipfs.boxo.ipld.unixfs.pb.Data.Type:type_name -> ipfs.boxo.ipld.unixfs.pb.Data.DataType
	3, // 1: ipfs.boxo.ipld.unixfs.pb.Data.mtime:type_name -> ipfs.boxo.ipld.unixfs.pb.IPFSTimestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_init() }
func file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_init() {
	if File_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_goTypes,
		DependencyIndexes: file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_depIdxs,
		EnumInfos:         file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_enumTypes,
		MessageInfos:      file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_msgTypes,
	}.Build()
	File_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto = out.File
	file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_rawDesc = nil
	file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_goTypes = nil
	file_github_com_ipfs_boxo_ipld_unixfs_pb_unixfs_proto_depIdxs = nil
}
