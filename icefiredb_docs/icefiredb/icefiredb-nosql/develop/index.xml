<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop on IceFireDB Documentation</title><link>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/</link><description>Recent content in Develop on IceFireDB Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>icefiredb-crdt-kv</title><link>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/icefiredb-crdt-kv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/icefiredb-crdt-kv/</guid><description>icefiredb-crdt-kv # Project introduction # The IceFireDB-CRDT-KV engine can support decentralized P2P networking, data synchronization and consistency between nodes. It is a component of the IceFireDB software ecosystem, thanks to the open source of IPFS.
Features # Easy access to P2P data consistency function Stable decentralized networking function Friendly program access interface Installing # go get -u github.com/IceFireDB/icefiredb-crdt-kv Example # package main import ( &amp;#34;bufio&amp;#34; &amp;#34;context&amp;#34; &amp;#34;fmt&amp;#34; icefiredb_crdt_kv &amp;#34;github.com/IceFireDB/icefiredb-crdt-kv/kv&amp;#34; badger2 &amp;#34;github.</description></item><item><title>icefiredb-ipfs-log</title><link>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/icefiredb-ipfs-log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/icefiredb-ipfs-log/</guid><description>icefiredb-ipfs-log # Project introduction # icefiredb-ipfs-log is a distributed immutable, operation-based conflict-free replication data structure that relies on ipfs to store data and merges each peer node data based on pubsub conflict-free. You can easily implement custom data structures such as kv, event, nosql, etc. based on icefiredb-ipfs-log.
Conflict-free log replication model
Log A Log B | | logA.append(&amp;#34;one&amp;#34;) logB.append(&amp;#34;hello&amp;#34;) | | v v +-----+ +-------+ |&amp;#34;one&amp;#34;| |&amp;#34;hello&amp;#34;| +-----+ +-------+ | | logA.</description></item><item><title>icefiredb-proxy</title><link>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/icefiredb_proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/icefiredb_proxy/</guid><description>IceFireDB-Proxy # Project introduction # IceFireDB-Proxy is a high-performance, high-availability, and user-friendly Resp protocol cluster proxy solution. It is supporting P2P networking and is a network component in the IceFireDB ecosystem.
Features # Complete data source mode support: stand-alone, cluster mode Rich command support Excellent cluster state management and failover Excellent traffic control policies: Traffic read/write separation and multi-tenant data isolation Excellent command telemetry features Bottom-fishing use of mind and base abilities that are closer to cloud native Supports P2P automatic networking, and Proxy helps traditional Redis databases achieve data decentralization.</description></item><item><title>redhub-frame</title><link>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/redhub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.icefiredb.xyz/icefiredb_docs/icefiredb/icefiredb-nosql/develop/redhub/</guid><description>redhub-frame # Project introduction # High-performance Redis-Server multi-threaded framework, based on RawEpoll model.
Features # Ultra high performance Fully multi-threaded support Low CPU resource consumption Compatible with redis protocol Create a Redis compatible server with RawEpoll model in Go Installing # go get -u github.com/IceFireDB/redhub Example # Here is a simple framework usage example,support the following redis commands:
SET key value GET key DEL key PING QUIT You can run this example in terminal:</description></item></channel></rss>